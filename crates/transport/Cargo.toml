[package]
name = "sqd-network-transport"
license = "AGPL-3.0-or-later"
version = "1.0.24"
edition = "2021"

[dependencies]
anyhow = "1"
async-trait = "0.1"
bimap = "0.6"
clap = { version = "4", features = ["derive", "env"] }
derivative = "2"
futures = "0.3"
futures-bounded = "0.2.4"
futures-core = "0.3"
lazy_static = { version = "1" }
libp2p = { workspace = true, features = ["dns", "tokio", "noise", "yamux", "identify", "kad", "relay", "dcutr", "ping", "request-response", "gossipsub", "serde", "autonat", "quic"] }
libp2p-connection-limits = { workspace = true }
libp2p-swarm-derive = { workspace = true }
log = "0.4"
lru = "0.12"
parking_lot = "0.12"
prometheus-client = { version = "0.22.2", optional = true }
prost = { version = "0.13", features = ["derive"] }
serde = { version = "1", features = ["derive"] }
serde_with = "3"
thiserror = "1"
tokio = { version = "1", features = ["fs", "macros", "sync"] }
tokio-util = "0.7"

sqd-contract-client = { path = "../contract-client" }
sqd-messages = { path = "../messages", features = ["signatures", "semver"] }

[features]
actors = ["behaviour"]
behaviour = []
proto = []
request-client = []
request-server = []
gateway = ["actors", "request-client", "proto"]
logs-collector = ["actors", "request-server", "proto"]
observer = ["actors"]
peer-checker = ["actors"]
pings-collector = ["actors"]
scheduler = ["actors", "request-client", "proto"]
worker = ["actors", "request-server", "proto"]
metrics = ["libp2p/metrics", "prometheus-client"]

[dev-dependencies]
tokio = { version = "1", features = ["rt", "time", "test-util"] }

[lints]
workspace = true
